{"version":3,"sources":["C:/Projekte/tfrdidi.github.io/sebastiani/src/$_lazy_route_resource lazy","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.css","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.html","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.ts","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.module.ts","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.css","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.html","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.ts","C:/Projekte/tfrdidi.github.io/sebastiani/src/app/services/content.service.ts","C:/Projekte/tfrdidi.github.io/sebastiani/src/environments/environment.ts","C:/Projekte/tfrdidi.github.io/sebastiani/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, Inject } from '@angular/core';\r\nimport { ContentService } from './services/content.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Page } from './model/model';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor( @Inject(DOCUMENT) private document) {\r\n    let bases = this.document.getElementsByTagName('base');\r\n    if (bases.length > 0) {\r\n      bases[0].setAttribute('href', environment.baseHref);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ContentService } from './services/content.service';\r\nimport { ContentComponent } from './components/content/content.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ContentComponent },\r\n  { path: '**', component: ContentComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ContentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MarkdownModule.forRoot(),\r\n    RouterModule.forRoot(routes),\r\n    HttpClientModule\r\n  ],\r\n  providers: [ \r\n    ContentService\r\n  ],\r\n  bootstrap: [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.css\n// module id = ../../../../../src/app/components/content/content.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <a routerLink=\\\"/\\\">\\r\\n    <h1>\\r\\n      {{contentService?.currentPage?.title}}\\r\\n    </h1>\\r\\n  </a>\\r\\n  <img width=\\\"300\\\" alt=\\\"Angular Logo\\\" src=\\\"{{contentService?.currentPage?.imageUrl}}\\\">\\r\\n</div>\\r\\n\\r\\n<markdown [data]=\\\"contentService?.currentPage?.content\\\">\\r\\n</markdown>\\r\\n\\r\\nInhaltsverzeichnis:\\r\\n<div class=\\\"loc\\\">\\r\\n  <div class=\\\"subpage\\\" *ngFor=\\\"let p of contentService?.currentPage?.subpages\\\">\\r\\n    <a *ngIf=\\\"p.url != route\\\" routerLink=\\\"{{p.url}}\\\">\\r\\n      <p>{{p.title}}</p>\\r\\n    </a>\\r\\n    <p *ngIf=\\\"p.url == route\\\">{{p.title}}</p>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.html\n// module id = ../../../../../src/app/components/content/content.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router, ActivationEnd } from '@angular/router';\r\n\r\nimport { ContentService } from '../../services/content.service';\r\nimport { Page } from '../../model/model';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent implements OnInit {\r\n\r\n  public contentService: ContentService;\r\n  public route: string;\r\n  private router: Router;\r\n\r\n  constructor(contentService: ContentService, router: Router) {\r\n    console.log('ContentComponent Constructor');\r\n    this.router = router;\r\n    this.contentService = contentService;\r\n\r\n    this.router.events.subscribe(a => {\r\n      if (a instanceof ActivationEnd) {\r\n        this.updateRoute();\r\n      }\r\n    });\r\n  }\r\n\r\n  public ngOnInit() {\r\n    console.log(\"on init\");\r\n    this.updateRoute();\r\n  }\r\n\r\n  private updateRoute() {\r\n    console.log(\"update route\");\r\n    this.route = this.router.url;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/components/content/content.component.ts","import { Injectable, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Page } from '../model/model';\r\nimport { ResponseType } from '@angular/http/src/enums';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ContentService implements OnInit {\r\n\r\n  public currentPage: Page;\r\n\r\n  private http: HttpClient;\r\n  private page: Observable<any>;\r\n\r\n\r\n  constructor(http: HttpClient, router: Router) {\r\n    this.http = http;\r\n    console.log(\"Constructor of ContentService\");\r\n    this.page = this.http.get(\"assets/content/loc.json\");\r\n    this.page.subscribe((p: Page) => {\r\n      this.currentPage = p;\r\n      this.currentPage.imageUrl = \"assets/images/\" + p.imageUrl;\r\n      console.log(\"image url: \" + this.currentPage.imageUrl);\r\n      const requestOptions = Object.assign(\r\n        {},\r\n        { responseType: 'text' },\r\n      );\r\n      this.http.get(\"assets/content/\" + p.contentUrl, { responseType: 'text' }).subscribe(response => {\r\n        this.currentPage.content = response;\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/app/services/content.service.ts","export const environment = {\r\n  production: true,\r\n  baseHref: \"/sebastiani/dist/\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Projekte/tfrdidi.github.io/sebastiani/src/main.ts"],"sourceRoot":"webpack:///"}